on: release
name: Build release binaries
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        rust: [stable]
    steps:
    - uses: hecrj/setup-rust-action@v1
      with:
        rust-version: ${{ matrix.rust }}
    - uses: actions/checkout@master
    - if: matrix.os == 'ubuntu-latest'
      run: |
          sudo apt update
          sudo apt install libx11-dev libgtk-3-dev
    - if: matrix.os == 'macOS-latest'
      run: |
          brew install cairo
    - name: Build
      run: cargo build --release --features gui
    - uses: Shopify/upload-to-release@master
      if: matrix.os != 'windows-latest'
      with:
        name: ${{ matrix.os }}_gui
        label: ${{ matrix.os }}
        path: target/release/gui
        repo-token: ${{ secrets.GITHUB_TOKEN }}
    - uses: Shopify/upload-to-release@master
      if: matrix.os != 'windows-latest'
      with:
        name: ${{ matrix.os }}_cli
        label: ${{ matrix.os }}
        path: target/release/cli
        repo-token: ${{ secrets.GITHUB_TOKEN }}
    - uses: Shopify/upload-to-release@master
      if: matrix.os == 'windows-latest'
      with:
        name: ${{ matrix.os }}_cli.exe
        label: ${{ matrix.os }}
        path: target\release\cli.exe
        repo-token: ${{ secrets.GITHUB_TOKEN }}
    - uses: Shopify/upload-to-release@master
      if: matrix.os == 'windows-latest'
      with:
        name: ${{ matrix.os }}_gui.exe
        label: ${{ matrix.os }}
        path: target\release\gui.exe
        repo-token: ${{ secrets.GITHUB_TOKEN }}
